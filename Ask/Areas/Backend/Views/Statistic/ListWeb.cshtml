@using WorkV3.Areas.Backend.ViewModels;
@model StatisticViewModel
@{
    ViewBag.Title = "分析";
    Layout = "~/Areas/Backend/Views/Shared/_MasterAdminPageLayout.cshtml";
    Pagination pagination = ViewBag.Pagination;
    long SiteId = (long)ViewBag.SiteId;
    string viewListUrl = Url.Action("ListWeb", new { siteId=SiteId , SearchStartDate = Model.SearchStartDate, SearchEndDate = Model.SearchEndDate, RangeType = (int)Model.RangeType});
}

@section HArea {
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Css/Card")
    @BundleConfig.StickyTableHeaders()
    @BundleConfig.HighCharts()

}

@section Script {
    @BundleConfig.Component()
    <script type="text/javascript">
        function SetIsShowLabelLine(isShow)
        {
            $("#IsShowCustomLableLine").prop("checked" , isShow);
            var form = $('#searchForm');
            form.submit();
        }

        //$('.modify_label_line').click(function (e) {
        //    e.preventDefault();
        //    window.parent.$.colorbox({
        //        href: $(this).attr("href"),
        //        width: "600",
        //        height: "95%",
        //        right: "20",
        //        iframe: true,
        //        transition: false,
        //        speed: 0,
        //        fadeOut: 100,
        //        onClosed: function () {
        //            location.reload(true);
        //        }
        //    });
        //});

        function refreshList()
        {
            //location.replace(location.href);
            location.href = "@Html.Raw(viewListUrl)";
        }

        var listObj = Component.dataList('listTable');
        listObj.deleted = function (delIds) {
            Component.confirm('刪除後，資料無法復原，確定刪除？', function (isConfirm) {
                if (isConfirm) {
                    $.post('StatisticConditionDel?siteId=@SiteId', { 'ids': delIds }, function () {
                        location.replace(location.href);
                    });
                }
            }, 'warning');
        }

        listObj.sorted = function (sortItems) {
            $.post('StatisticConditionSort?siteId=@SiteId', { 'items': sortItems }, function () {
                location.replace(location.href);
            });
        }
    </script>
<script type="text/javascript">
    $(function () {
        // $(".fixTable").stickyTableHeaders();
        var dateArray = [], seriesArray = [], plot_lines = [], statistic_celling = [];
        var range_max = 0, range_min = 0, celling_interval = 100;
        @if (Model != null && Model.StatisticConditionList.Count() > 0)
        {
            int cell_interval = 100;
            long max = 0, min = 0;
            bool IsSetDates = false;
            for (int i = 0; i < Model.StatisticConditionList.Count(); i++)
            {
                var StatisticConditionViewModel = Model.StatisticConditionList.ElementAt(i);
                if (StatisticConditionViewModel.LogDailyList == null)
                {
                    continue;
                }
                string dataValues = "";

                for (int k = 0; k < StatisticConditionViewModel.LogDailyList.Count(); k++)
                {
                    AnalysisDailyLogViewModel daily_item = StatisticConditionViewModel.LogDailyList.ElementAt(k);
                    if (!IsSetDates)
                    {
                         if (Model.IsShowCustomLableLine)
                        {
                            for (int m = 0; m < Model.LabelLineList.Count(); m++)
                            {
                                AnalysisLogCustomLabelLineViewModel label_item = Model.LabelLineList.ElementAt(m);
                                if (label_item.LabelDate == daily_item.LogDate)
                                {
                                    <text>
        var plotLineOption = {
            color: '@StatisticConditionModels.ColorBar(label_item.LabelColor)',
            width: 2,
            value: @k.ToString(),
            label: {
                text: '@label_item.Title',
                verticalAlign: 'top',
                textAlign: 'center',
                rotation: 0,
                y: -20,
            }
        };
        plot_lines.push(plotLineOption);
        </text>
                                }
                            }
                        }
                        <text>
                        dateArray.push("@daily_item.LogDate");
                        </text>
                    }
                    max = Math.Max(daily_item.TotalViewCount, max);
                    dataValues += daily_item.TotalViewCount.ToString()+",";
                }
                dataValues = dataValues.Trim(',');
                IsSetDates = true;
                <text>
        var series = {
            name: '@StatisticConditionViewModel.Title',
            data: [@dataValues],
            marker: {
                enabled: false
            },
            // lineWidth:5,
            color: '@StatisticConditionModels.ColorBar(StatisticConditionViewModel.LabelColor)',
            zIndex: 2
        };
        seriesArray.push(series);
        </text>
            }

            if (max < 100)
            {
                cell_interval = 10;
            }
            int cell_count = (int)(max / cell_interval);
            if (max % cell_interval != 0)
            {
                cell_count++;
            }
            for (int i = 0; i <= cell_count; i++)
            {
                <text>
        statistic_celling.push(@(cell_interval * i))
        </text>
            }
            max = cell_count * cell_interval;
            <text>
        range_max=@max;
        range_min=@min;
        celling_interval =@cell_interval;
        </text>
        }
        $('.chart-line').highcharts({
            chart: {
                height: 500,
                /*style: {
                    padding: '30px 0 20px'
                },*/
                type: 'line',
                spacingTop: 50
            },
            title: {
                text: null,
            },
            subtitle: {
                text: null,
            },
            /*legend: {
                enabled: false
            },*/
            xAxis: {
                title: {
                    text: '日期',
                    margin: 20
                },
                categories: dateArray,
                tickmarkPlacement: 'on',
                labels: {
                    style: {
                        fontSize: '18px'
                    },
                },
                plotLines: plot_lines
            },
            yAxis: {
                min: range_min,
                max: range_max,
                tickInterval: celling_interval,
                title: {
                    text: '瀏量',
                    rotation: 0,
                    align: 'high',
                    offset: 0,
                    y: -20,
                    x: -15
                },
                categories: statistic_celling,
                labels: {
                    style: {
                        fontSize: '18px'
                    }
                },
                maxPadding: 0.05
            },
            series: seriesArray
        });
    });

</script>
}

<div class="groove groove-1">
    <h1 class="title-admin-page">比較分析</h1>
    <div class="analytics-control-bar">
        <form id="searchForm" method="post" action="@Url.Action("ListWeb", new { SiteId=SiteId} )">

            <div class="selectDateRange" style="float:left;">
                <a class="btn-grey-darken-4-o transparent dropdown-button" href="javascript:" data-activates="choiceDateRange" title="" id="selectedDates"><span id="spDateRange">@(Model.SearchStartDate.ToString("yyyy/MM/dd") + " - " + ((Model.SearchEndDate.Year == Model.SearchStartDate.Year) ? Model.SearchEndDate.ToString("MM/dd") : Model.SearchEndDate.ToString("yyyy/MM/dd")))</span> <i class="cc cc-chevron-down"></i></a>
                <ul id="choiceDateRange" class="dropdown-content customContent full closeOnClick">
                    <li>
                        <input type='hidden' name="SearchStartDate" id="SearchStartDate" value="@Model.SearchStartDate.ToString("yyyy/MM/dd")">
                        <input type='hidden' name="SearchEndDate" id="SearchEndDate" value="@Model.SearchEndDate.ToString("yyyy/MM/dd")">
                        <input type='hidden' name="RangeType" id="RangeType" value="@((int)Model.RangeType).ToString()">
                        <iframe class="dropdownIframe" src="@Url.Action("SelectRangeDate", "Common", new { start = Model.SearchStartDate.ToString("yyyy/MM/dd"), end=Model.SearchEndDate.ToString("yyyy/MM/dd"), select=(int)Model.RangeType })" frameborder="0"></iframe>
                    </li>
                </ul>
            </div>
            <div class="selectCreator" style="float:right">
                <a href="@Url.Action("CustomLabelLine", "Analysis")" class="btn-grey-o modify_label_line my-openEdit-m"><i class="cc cc-edit"></i>自訂標線</a>
                <input type="checkbox" id="IsShowCustomLableLine" name="IsShowCustomLableLine" @((Model != null) ? (Model.IsShowCustomLableLine ? "checked" : string.Empty) : string.Empty ) />
            </div>
        </form>
    </div>

    <div class="charts">
        <div class="chart-line highcharts"></div>
    </div>



    <div class="card shadow-none m-T-12">
        <table class="fixTable" id="listTable">
            <caption>
                <div class="float-R">
                    <a class="btn-grey-o square tooltip-info" href="javascript:" data-action="sort" title="排序"><i class="cc cc-sort"></i></a>
                    <a class="btn-grey-darken-4-o tooltip-info my-openEdit-m tooltipstered" href="@Url.Action("StatisticConditionEdit", new { SiteId=SiteId} )"><i class="cc cc-plus"></i>新增條件</a>
                    <a class="btn-grey-o square tooltip-info btn-del" href="javascript:" data-action="del" title="刪除"><i class="cc cc-trash-o"></i>
                    </a>

                    <span data-for="sort" style="display:none;">
                        <a class="btn-grey-o no" href="javascript:"><i class="cc cc-close"></i>取消</a>
                        <a class="btn-grey-darken-4-o yes" href="javascript:"><i class="cc cc-check"></i>確定</a>
                    </span>
                    <span data-for="del" style="display:none;">
                        <a class="btn-grey-o no" href="javascript:"><i class="cc cc-close"></i>取消</a>
                        <a class="btn-grey-darken-4-o yes" href="javascript:"><i class="cc cc-check"></i>確定</a>
                    </span>
                </div>
            </caption>
            <thead>
                <tr>
                    <th>序</th>
                    <th>色調</th>
                    <th>條件名稱</th>
                    <th>分析項目</th>
                    <th>篩選條件</th>
                    <th>流量數值</th>
                    <th>顯示</th>
                    <th>編輯</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.StatisticConditionList != null)
                {
                    for (int i = 0, len = Model.StatisticConditionList.Count(); i < len; ++i)
                    {
                        StatisticConditionModels item = Model.StatisticConditionList.ElementAt(i);
                        if (item != null)
                        {
                            string viewLinkUrl = "";
                            if (item.StatisticType == StatisticType.SummaryViewCount)
                            {
                                viewLinkUrl = Url.Action("PageAnalysisDetails", "Statistic", new { ID=item.ID, SearchStartDate = Model.SearchStartDate,  SearchEndDate = Model.SearchEndDate, RangeType = (int)Model.RangeType });
                            }
                            if (item.StatisticType == StatisticType.DailyViewCount)
                            {
                                viewLinkUrl = Url.Action("PageAnalysisDetails", "Statistic", new { ID = item.ID, type = "user", SearchStartDate = Model.SearchStartDate, SearchEndDate = Model.SearchEndDate, RangeType = (int)Model.RangeType });
                            }
                            if (item.StatisticType == StatisticType.MemberViewCount)
                            {
                                viewLinkUrl = Url.Action("PageAnalysisDetails", "Statistic", new { ID = item.ID, type = "member", SearchStartDate = Model.SearchStartDate, SearchEndDate = Model.SearchEndDate, RangeType = (int)Model.RangeType });
                            }
                            <tr data-id="@item.ID">
                                <td class="sort">@(i + 1)</td>
                                <td><i class="btn-default btn-tiny" data-color="@item.LabelColor"></i></td>
                                <td class="text-L">@item.Title</td>
                                <td class="text-L">@(item.GetStatisticTypeName(item.StatisticType))</td>
                                <td class="text-L">@Html.Raw(item.GetConditionContent(SiteId))</td>
                                <td class="text-R"><a class="font-black" href="@viewLinkUrl">@item.StatisticValue</a></td>
                                <td class="icon">
                                    <a class="btn-grey-darken-4-o transparent square showStatus" href="javascript:UpdateShowStatus('@(item.ID.ToString())', @((!item.ShowStatus).ToString().ToLower()));"><i class="cc @(item.ShowStatus ? "cc-eye" : "cc-eye-off font-red")"></i></a>
                                </td>
                                <td class="icon edit">
                                    <a class="btn-grey-darken-4-o transparent square my-openEdit-m" href="@Url.Action("StatisticConditionEdit", new { id = item.ID, SiteId=SiteId })"><i class="cc cc-edit-o"></i></a>
                                </td>
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<link href="~/css/Cards/Analytics/style1.css" rel="stylesheet" />
<link href="~/css/forms.css" rel="stylesheet" type="text/css" />
<link href="~/css/vendor/rangeDatePicker/rangeDatePicker.css" rel="stylesheet" type="text/css" />
<script src="~/script/rangeDatePicker/datepicker.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () {

        $(".my-openEdit-m").colorbox({
            width: "600",
            height: "95%",
            right: "20",
            iframe: true,
            transition: false,
            speed: 0,
            fadeOut: 100,
            createIframe: function () {
                var iframe = document.createElement('iframe');
                var attrs = $(this).data('cbox-iframe-attrs');

                if (typeof attrs === 'object') {
                    $.each(attrs, function (key, val) {
                        iframe[key] = val;
                    });
                }

                if ('frameBorder' in iframe) {
                    iframe.frameBorder = 0;
                }
                if ('allowTransparency' in iframe) {
                    iframe.allowTransparency = "true";
                }
                iframe.name = "EidtConditionInfo"; // give the iframe a unique name to prevent caching
                iframe.allowFullscreen = true;

                return iframe;
            }
        });
    });
    //function setSelectedDateRange(startdate, enddate, rangeType) {
    //    var selectedDate = startdate;
    //    if (startdate.split("/")[0] == enddate.split("/")[0])
    //        selectedDate += " - " + enddate.split("/")[1] + "/" + enddate.split("/")[2];
    //    else
    //        selectedDate += " - " + enddate;
    //    $("#SearchStartDate").val(startdate);
    //    $("#SearchEndDate").val(enddate);
    //    $("#spDateRange").html(selectedDate);
    //    $("#RangeType").val(rangeType);
    //    $('#choiceDateRange').hide();
    //    $("#searchForm").submit();
    //}
    
    function setSelectedDateRange(startdate, enddate, selectCbxValue)
    {
        var selectedDate =startdate ;
        if(startdate.split("/")[0] == enddate.split("/")[0])
            selectedDate +=  " - " + enddate.split("/")[1] + "/" + enddate.split("/")[2];
        else
            selectedDate +=  " - " + enddate;

        $("#SearchStartDate").val(startdate);
        $("#SearchEndDate").val(enddate);
        $("#RangeType").val(selectCbxValue);
        $("#spDateRange").html(selectedDate);
        $('#choiceDateRange').hide();
       
        var checkStartDateResult = Component.parseDate($("#SearchStartDate").val());
        var checkEndDateResult = Component.parseDate($("#SearchEndDate").val());
        if (checkStartDateResult == null) {
            Component.alert('開始日期格式錯誤。');
            return;
        }
        if (checkEndDateResult == null) {
            Component.alert('結束日期格式錯誤。');
            return;

        }
        $("#searchForm").submit();
    }
    function cancelSelectedDateRange() {
        $('#choiceDateRange').hide();
    }

    function UpdateShowStatus(ID, ShowStatus) {
        var formData = new FormData();
        formData.append("ID", ID);
        formData.append("ShowStatus", ShowStatus);
        $.ajax({
            url: "@Url.Action("StatisticConditionChangeStatus")",
            data: formData,
        type: "POST",
        dataType: 'json',
        processData: false,
        contentType: false,
        async: false,
        success: function (data) {
           
            //location.href = location.href;
            location.href = "@Html.Raw(viewListUrl)";
        },
        fail: function () {
            console.log("refresh fail ");
        }
    });
    }
    function closeLeftEdit()
    {}
</script>



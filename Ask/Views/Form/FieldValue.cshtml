@model FormFieldValues

@{    
    string uploadUrl = Model.UploadUrl.TrimEnd('/') + "/";
    string[] widthClassList = { "", "col-4", "col-2", "col-1" };
}

@foreach (FieldModel field in Model.FieldList) {
    <div class="@widthClassList[field.Width]">
        @if (field.TypeID == "text") {
        <div class="title inline">@field.Title</div>
        <div class="full inline">
            @if (!string.IsNullOrWhiteSpace(field.Description)) {
                <div class="float-L">@Html.Raw(field.Description.ReplaceEnterToBr())</div>
            }
            @if (!string.IsNullOrWhiteSpace(field.Image)) {
                <div class="float-R"><img src="@(uploadUrl + Server.UrlPathEncode(field.Image))" class="float-R img" /></div>
            }
        </div>
        } else if (field.TypeID == "hr") {        
        <hr class="hr @field.Description" data-label="@field.Hint" />
        } else {
            FieldValue val = Model.ValueList.FirstOrDefault(v => v.FieldID == field.ID);            
        <div class="title inline">@(string.IsNullOrWhiteSpace(field.Title) ? string.Empty : field.Title + "：")</div>            
        <div class="text-value">
            @if (val != null && !string.IsNullOrWhiteSpace(val.Value)) {
                if (field.TypeID == "image") {
                    string[] imgs = Newtonsoft.Json.JsonConvert.DeserializeObject<string[]>(val.Value);
                    foreach (string img in imgs) {
                        <img src="@(uploadUrl + Server.UrlPathEncode(img))" />
                    }
                } else if (field.TypeID == "file") {
                    string[] files = Newtonsoft.Json.JsonConvert.DeserializeObject<string[]>(val.Value);
                    foreach (string file in files) {
                        string name = file.Substring(file.IndexOf('/') + 1);
                        <a href="@(uploadUrl + Server.UrlPathEncode(file))" target="_blank" download>@name</a>
                    }
                } else if (field.TypeID == "video") {
                    <div id="div_@field.ID" data-video="@(uploadUrl + Server.UrlPathEncode(val.Value))"></div>
                } else if (field.TypeID == "voice") {
                    string[] files = Newtonsoft.Json.JsonConvert.DeserializeObject<string[]>(val.Value);
                    foreach (string file in files) {
                        <div id="div_@field.ID" data-voice="@(uploadUrl + Server.UrlPathEncode(file))"></div>
                    }
                } else if (field.TypeID == "checkbox") {
                    string[] options = Newtonsoft.Json.JsonConvert.DeserializeObject<string[]>(val.Value);
                    @:@string.Join(", ", options)
                } else if (field.TypeID == "address") {
                    FieldAddress address = Newtonsoft.Json.JsonConvert.DeserializeObject<FieldAddress>(val.Value);
                    @:@address.GetAddress()
                } else {
                    @:@val.Value
                }
            }
        </div>
        }
    </div>
}


@model IEnumerable<ArticleModels>
@{
    IEnumerable<ArticleTypesModels> types = ViewBag.Types;
    Pagination pagination = ViewBag.Pagination;
    ArticleSettingModels setting = ViewBag.Setting;
    SitePage sitePage = ViewBag.SitePage;

    Dictionary<long, List<ArticleTypesModels>> itemTypes = ViewBag.ItemTypes;
    Dictionary<long, SitePage> itemPages = ViewBag.ItemPages;

    MenusModels menu = ViewBag.Menu;

    string uploadUrl = ViewBag.UploadUrl;
    string defaultTypeID = Request.QueryString["typeid"];
}

<link href="~/css/forms.css" rel="stylesheet" />
<link href="~/css/Cards/Article/list-style1.css" rel="stylesheet" />
<script src="~/script/isotope/isotope.pkgd.js"></script>

<div id="card-@setting.MenuID" class="card-common card-article" data-style="1">
    <h1 class="article-title">@menu.Title</h1>
    <div class="filters-bar">
        <ol id="filter-bar">
            @{
                bool IsDefaultAll = true;
                if (!string.IsNullOrEmpty(defaultTypeID))
                {
                    IsDefaultAll = false;
                }
            }
            <li data-filter="all" class="@(IsDefaultAll?"active":"")"><span>全部</span></li>
            @foreach (ArticleTypesModels type in types)
            {
                string defaultActive = "";
                if (!string.IsNullOrEmpty(defaultTypeID) && defaultTypeID == type.ID.ToString())
                { defaultActive = "active"; }
                <li data-filter="@type.ID" class="@defaultActive"><span>@type.Name</span></li>
            }
        </ol>
    </div>
    <div class="article-list">
        <ul id="article-ul">
            @foreach (ArticleModels item in Model)
            {
                List<ArticleTypesModels> articleTypes = itemTypes.GetValue(item.ID);
                string filterClass = (articleTypes?.Count > 0 ? "all, " + string.Join(", ", articleTypes.Select(t => t.ID)) : "all");
                if (itemPages == null || !itemPages.Keys.Contains(item.CardNo))
                {
                    continue;
                }
                SitePage page = itemPages[item.CardNo];
                string target = "_self";
                string url = string.Empty;
                if (item.Type == "page")
                {
                    url = Url.Action("Index", "Home", new { SiteSN = page.SiteSN, PageSN = page.PageSN });
                }
                else if (item.Type == "link")
                {
                    url = item.Link;
                    if (item.IsOpenNew)
                    {
                        target = "_blank";
                    }
                }
                else if (item.Type == "archive")
                {
                    target = "_blank";
                    if (!string.IsNullOrWhiteSpace(item.Archive))
                    {
                        ResourceFilesModels file = Newtonsoft.Json.JsonConvert.DeserializeObject<ResourceFilesModels>(item.Archive);
                        url = uploadUrl + file.FileInfo;
                    }
                }
                <li data-filter-class="@filterClass">
                    <a href="@Html.Raw(url+"?id="+item.ID)" target="@target">@*Joe 20190924由於Title要取文章標題，故補上ID*@
                        @if (item.IssueDate != null)
                        {
                            <div class="article-list-date">
                                <div>@(((DateTime)item.IssueDate).Month.ToString("00"))</div>
                                <div>@(((DateTime)item.IssueDate).Day.ToString("00"))</div>
                            </div>
                        }
                        @if (articleTypes?.Count() > 0)
                        {
                            foreach (ArticleTypesModels type in articleTypes)
                            {
                                <div class="article-list-type" data-type="@type.ID">@type.Name</div>
                            }
                        }
                        <div class="article-list-title">@item.Title</div>
                    </a>
                </li>
            }
        </ul>
    </div>
    @if (setting.PagingMode == "頁碼分頁")
    {
        <div class="pagination text-C">
            @Html.Action("Pager", "Common", pagination)
        </div>
    }
    else if (setting.PagingMode == "點擊看更多")
    {
        <div class="pagination text-C">
            <a class="btn-black-o btn-more" href="javascript:">More</a>
        </div>
    }
</div>
@BundleConfig.Component()
<script type="text/javascript">
    @if ((ViewBag.CheckReadMode as bool?) == false) {
        string alertStr = "", pageSn = "";
        if((ViewBag.IsLogin as bool?) == false)
        {
            alertStr = $"想要瀏覽?請先登入會員(限{ViewBag.IdentityName}觀看全文)";
            pageSn = "Login";
        }
        else
        {
            alertStr = $"想要瀏覽?(限{ViewBag.IdentityName}觀看全文)";
            pageSn = "Index";
        }
        <text>
            Component.alert('@alertStr', function () {
               location.href = '@Html.Raw(Url.Action("Index", "Home", new { siteSn = sitePage.SiteSN, pageSn = pageSn }))';
            });
        </text>
    }
    //susan 陽明電子報不需要隱藏footer 20190213
    //$(document).ready(function () {
        //var uagent = navigator.userAgent;
        //if (uagent != null) {
            //行動版時, 隱藏 footer , 華山要求的 2018-10-25 charlie_shan
            //if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(uagent)) {
                //$("#footer").hide();
            //}
        //}
    //});
</script>
@if (setting.PagingMode == "不分頁")
{
    <text>
        <script type="text/javascript">
    var currentTypeID = "all";
    $(document).ready(function () {
            var typeId = Component.queryString('typeId');
            if (typeId && typeId != "") {
                currentTypeID = typeId;
            }
            var outerElm = $('#card-@setting.MenuID');
            var $grid = outerElm.find('#article-ul').isotope({
                layoutMode: 'vertical',
                itemSelector: '#article-ul > li',
                hiddenStyle: {
                    opacity: 0,
                    transform: 'scale(1)'
                },
                visibleStyle: {
                    opacity: 1,
                    transform: 'scale(1)'
                }
            });
            function filterList(value) {
                return outerElm.find("#article-ul").find("li[data-filter-class*=" + value + "]");
            }
            outerElm.find('#filter-bar > li').each(function () {
                var $this = $(this);
                $this.on('click', function () {
                    outerElm.find('#filter-bar').find('.active').removeClass('active');
                    $this.addClass('active');

                    var filterValue = $this.attr('data-filter');
                    currentTypeID = filterValue;
                    console.log(currentTypeID);
                    $grid.isotope({
                        filter: filterList(currentTypeID)
                    });
                });
            });

            var typeId = Component.queryString('typeId');
            if (typeId)
            {
                outerElm.find('#filter-bar').find('.active').trigger("click");
            }
        });
        </script>
    </text>
}
else if (setting.PagingMode == "點擊看更多" || setting.PagingMode == "捲動看更多")
{
    <text>
        <script type="text/javascript">
    var currentTypeID = "all";
    (function ($) {
        var typeId = Component.queryString('typeId');
        if (typeId && typeId!= "") {
            currentTypeID = typeId;
        }
        var outerElm = $('#card-@setting.MenuID');
        var $grid = outerElm.find('#article-ul');
        //var $grid = outerElm.find('#article-ul').isotope({
        //    layoutMode: 'vertical',
        //    itemSelector: '#article-ul > li',
        //    hiddenStyle: {
        //        opacity: 0,
        //        transform: 'scale(1)',
        //        position:'relative'
        //    },
        //    visibleStyle: {
        //        opacity: 1,
        //        transform: 'scale(1)'
        //    }
        //});
        function filterList(value) {

            return outerElm.find("#article-ul").find("li[data-filter-class*=" + value + "]");
        }
        outerElm.find('#filter-bar > li').each(function () {
            var $this = $(this);
            $this.on('click', function () {
                outerElm.find('#filter-bar').find('.active').removeClass('active');
                $(this).addClass('active');

                var filterValue = $(this).attr('data-filter');
                currentTypeID = filterValue;

                if (filterValue == 'all') {
                    pageIndex = 1;
                    finish = false;
                    var url = '@Html.Raw(Url.Action("Next", "Article", new { siteId = ViewBag.SiteID, menuId = setting.MenuID, style=1 }))&pageIndex=1';

                    var key = Component.queryString('key');
                    if (key)
                        url += '&key=' + encodeURIComponent(key);

                    var type = Component.queryString('type');
                    if (type)
                        url += '&type=' + encodeURIComponent(type);

                    var organizerId = Component.queryString('organizerId');
                    if (organizerId)
                        url += '&organizerId=' + organizerId;

                    var typeId = Component.queryString('typeId');
                    if (typeId)
                        url += '&typeId=' + encodeURIComponent(typeId);

                    var guestId = Component.queryString('guestId');
                    if (guestId)
                        url += '&guestId=' + guestId;
                    $grid.html("");
                    $.get(url, function (html) {
                        if (!$.trim(html)) {
                            finish = true;
                            if (button) {
                                button.parent().fadeOut(function () {
                                    $(this).remove();
                                });
                            }
                        }

                        html = $(html);
                        var imgdefereds = [];
                        html.find('img').each(function () {
                            var dfd = $.Deferred();
                            $(this).bind('load', function () {
                                dfd.resolve();
                            }).bind('error', function () {
                                dfd.resolve();
                            })
                            if (this.complete) {
                                setTimeout(function () {
                                    dfd.resolve();
                                }, 100);
                            }
                            imgdefereds.push(dfd);
                        })
                        $.when.apply(null, imgdefereds).done(function () {
                            $grid.append(html);
                            processing = false;

                            //$grid.isotope('appended', html);
                            if ($("#" + translateButtonId).length > 0) {
                                translateInitilization();
                            }
                            outerElm.find('a.btn-more').parent().fadeIn();
                            $grid.removeAttr("style");
                            $grid.children("li").removeAttr("style");
                            //outerElm.find('#filter-bar > li.active').triggerHandler('click');
                        });
                    });
                } else {

                    pageIndex = 1;
                    finish = false;
                    var url = '@Html.Raw(Url.Action("Next", "Article", new { siteId = ViewBag.SiteID, menuId = setting.MenuID, style=1 }))&pageIndex=1&typeId=' + filterValue;

                    var key = Component.queryString('key');
                    if (key)
                        url += '&key=' + encodeURIComponent(key);

                    var type = Component.queryString('type');
                    if (type)
                        url += '&type=' + encodeURIComponent(type);

                    var organizerId = Component.queryString('organizerId');
                    if (organizerId)
                        url += '&organizerId=' + organizerId;

                    var typeId = Component.queryString('typeId');
                    if (typeId)
                        url += '&typeId=' + encodeURIComponent(typeId);

                    var guestId = Component.queryString('guestId');
                    if (guestId)
                        url += '&guestId=' + guestId;
                    $grid.html("");
                    $.get(url, function (html) {
                        if (!$.trim(html)) {
                            finish = true;
                            if (button) {
                                button.parent().fadeOut(function () {
                                    $(this).remove();
                                });
                            }
                        }

                        html = $(html);
                        var imgdefereds = [];
                        html.find('img').each(function () {
                            var dfd = $.Deferred();
                            $(this).bind('load', function () {
                                dfd.resolve();
                            }).bind('error', function () {
                                dfd.resolve();
                            })
                            if (this.complete) {
                                setTimeout(function () {
                                    dfd.resolve();
                                }, 100);
                            }
                            imgdefereds.push(dfd);
                        })
                        $.when.apply(null, imgdefereds).done(function () {
                            outerElm.find('a.btn-more').parent().fadeIn();
                            $grid.append(html);
                            processing = false;

                            //$grid.isotope('appended', html);
                            if ($("#" + translateButtonId).length > 0) {
                                translateInitilization();
                            }
                            $grid.removeAttr("style");
                            $grid.children("li").removeAttr("style");
                            //outerElm.find('#filter-bar > li.active').triggerHandler('click');
                        });
                    });
                }

                //$grid.isotope({
                //    filter: filterList(filterValue)
                //});
            });
        });//.filter('.active').triggerHandler('click');

        var pageIndex = 1;
        var processing = false;
        var finish = false;

        function loadNextPage(button) {
            if (processing || finish)
                return;

            processing = true;
            var url = '@Html.Raw(Url.Action("Next", "Article", new { siteId = ViewBag.SiteID, menuId = setting.MenuID, style = 1 }))&pageIndex=' + (++pageIndex);

            var key = Component.queryString('key');
            if (key)
                url += '&key=' + encodeURIComponent(key);

            var type = Component.queryString('type');
            if (type)
                url += '&type=' + encodeURIComponent(type);

            var typeId = currentTypeID;
            console.log(typeId);
            if(typeId)
                url += '&typeId=' + encodeURIComponent(typeId);

            $.get(url, function (html) {
                if (!$.trim(html)) {
                    finish = true;
                    if (button) {
                        button.parent().fadeOut(function () {
                            //$(this).remove();
                        });
                    }
                }
                html = $(html);
                var imgdefereds = [];
                html.find('img').each(function () {
                    var dfd = $.Deferred();
                    $(this).bind('load', function () {
                        dfd.resolve();
                    }).bind('error', function () {
                        dfd.resolve();
                    })
                    if (this.complete) {
                        setTimeout(function () {
                            dfd.resolve();
                        }, 100);
                    }
                    imgdefereds.push(dfd);
                })
                $.when.apply(null, imgdefereds).done(function () {
                    $grid.append(html);
                    processing = false;

                    $grid.isotope('appended', html);

                    //TCSC lang change
                    if ($("#" + translateButtonId).length > 0) {
                        translateInitilization();
                    }
                    //outerElm.find('#filter-bar > li.active').triggerHandler('click');
                });
            });
        }

        @if (setting.PagingMode == "點擊看更多") {
            <text>
        outerElm.find('a.btn-more').click(function () {
            loadNextPage($(this));
        });
        </text>
        } else {
            @:Component.scrollLoad(100, loadNextPage);
                        }
    })(jQuery);
        </script>

    </text>
}
else if (setting.PagingMode == "頁碼分頁")
{
    <script type="text/javascript">
    (function () {
        var outerElm = $('#card-@setting.MenuID');
        var listElm = $('.article-list');

        function initList(type) {
            outerElm.find('#article-ul > li').each(function () {
                if (type && type != 'all') {
                    $(this).find('div.article-list-type[data-type!="' + type + '"]').remove();
                } else {
                    $(this).find('div.article-list-type:gt(0)').remove();
                }
            });

            if (type) {
                outerElm.find('#filter-bar > li').each(function () {
                    if ($(this).attr('data-filter') == type)
                        $(this).addClass('active');
                    else
                        $(this).removeClass('active');
                });
            }
            //TCSC lang change
            if ($("#" + translateButtonId).length > 0) {
                translateInitilization();
            }
        }

        var typeId = Component.queryString('typeId');
        initList(typeId);

        outerElm.on('click', '#filter-bar > li', function () {
            var typeId = $(this).attr('data-filter');
            var url = '@Url.Action("Index", "Home", new { SiteSN = sitePage.SiteSN, PageSN = sitePage.PageSN })';

            var query = [];
            if (typeId != 'all')
                query.push('typeId=' + typeId);

            var key = Component.queryString('key');
            if (key)
                query.push('key=' + encodeURIComponent(key));

            var type = Component.queryString('type');
            if (type)
                query.push('type=' + encodeURIComponent(type));

            if (query.length)
                url += '?' + query.join('&');

            $.get(url, function (html) {
                html = $(html);
                listElm.fadeOut(function () {
                    outerElm.html(html.find('#' + outerElm.prop('id')).html());
                    initList(typeId);
                    listElm.fadeIn();
                });
            });
        });

        outerElm.on('click', 'div.pagination a', function (e) {
            e.preventDefault();

            var url = this.href;
            var m = url.match(/[?&]typeId=(\d+)/i);
            var typeId = m ? m[1] : '';

            $.get(url, function (html) {
                html = $(html);
                listElm.fadeOut(function () {
                    $('html,body').animate({
                        scrollTop: $("#filter-bar").offset().bottom
                    }, 'slow');
                    outerElm.html(html.find('#' + outerElm.prop('id')).html());
                    initList(typeId);
                    listElm.fadeIn();
                });
            });
        });

    })();
    </script>
}

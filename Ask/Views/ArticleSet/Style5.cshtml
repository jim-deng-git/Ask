@model IEnumerable<ArticleModels>
@{
    ArticleSetModels setting = ViewBag.Setting;
    Dictionary<long, SitePage> itemPages = ViewBag.ItemPages;
    Dictionary<long, List<ArticleTypesModels>> itemTypes = ViewBag.ItemTypes;
}

<link href="~/css/forms.css" rel="stylesheet" />
<link href="~/css/card.css" rel="stylesheet" />
<link href="~/css/Cards/ArticleSet/style5.css" rel="stylesheet" />

<div id="card_@setting.CardNo" class="card-common card-articleSet" data-style="5">
    <div class="filters-bar">
        <ol id="filter-bar">
            <li data-filter="all" class="active"><span>全部</span></li>
            @{List<string> AllTypes = new List<string>();}
            @foreach (var t in itemTypes)//取得所有文章的類別
            {
                AllTypes.Add(t.Value.First().Name);

            }

            @{  //過濾重複類別
                HashSet<string> types = new HashSet<string>(AllTypes);
            }
            @foreach (string typeName in types)
            {
                <li data-filter="@typeName">
                    <span>@typeName</span>
                </li>
            }
        </ol>
    </div>

    <div class="article-list">
        <ul id="article-ul">
            @foreach (ArticleModels item in Model)
            {
                List<ArticleTypesModels> articleTypes = itemTypes.GetValue(item.ID);
                string filterClass = (articleTypes?.Count > 0 ? "all, " + string.Join(", ", articleTypes.Select(t => t.Name)) : "all");
                SitePage page = itemPages[item.CardNo];
                string img = item.GetFirstImg(setting);
                if (!string.IsNullOrEmpty(img))
                {
                    string absUploadUrl = WorkV3.Golbal.UpdFileInfo.GetUPathByMenuID(page.SiteID, page.MenuID);
                    if (System.IO.File.Exists(string.Format("{0}\\R_{1}", absUploadUrl, img)))
                    {
                        img = string.Format("R_{0}", img);
                    }
                }
                string target = "_self";
                string url = string.Empty;
                if (item.Type == "page")
                {
                    url = Url.Action("Index", "Home", new { SiteSN = page.SiteSN, PageSN = page.PageSN });
                }
                else if (item.Type == "link")
                {
                    url = item.Link;
                    if (item.IsOpenNew)
                    {
                        target = "_blank";
                    }
                }
                else if (item.Type == "archive")
                {
                    target = "_blank";
                    if (!string.IsNullOrWhiteSpace(item.Archive))
                    {
                        ResourceFilesModels file = Newtonsoft.Json.JsonConvert.DeserializeObject<ResourceFilesModels>(item.Archive);
                        url = page.GetUploadUrl() + file.FileInfo;
                    }
                }
                <li class="item-static" data-filter-class="@filterClass">
                    <a href="@Html.Raw(Url.Action("Index", "Home", new { SiteSN = page.SiteSN, PageSN = page.PageSN }))" target="@target">
                        <div class="card shadow-none">
                            <div class="card-box">
                                @if (!string.IsNullOrWhiteSpace(item.VideoImg))
                                {
                                    ResourceFilesModels imgModel = Newtonsoft.Json.JsonConvert.DeserializeObject<ResourceFilesModels>(item.VideoImg);
                                    url = page.GetUploadUrl() + imgModel.FileInfo;
                                    if (item.VideoImgIsCustom)
                                    {
                                        <div class="card-img golden" style="background-image:url('@(page.GetUploadUrl() + Server.UrlPathEncode(img))')">
                                            <div class="card-img-content" style="background-image:url('@(page.GetUploadUrl() + Server.UrlPathEncode(img))')"></div>
                                            <span><i class="cc cc-play"></i></span>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="card-img golden" style="background-image:url('@(item.VideoImg)')">
                                            <div class="card-img-content" style="background-image:url('@(item.VideoImg)')"></div>
                                            <span><i class="cc cc-play"></i></span>
                                        </div>
                                    }
                                }
                                else
                                {
                                    if (!string.IsNullOrWhiteSpace(img))
                                    {
                                        <div class="card-img golden" style="background-image:url('@(page.GetUploadUrl() + Server.UrlPathEncode(img))')">
                                            <div class="card-img-content" style="background-image:url('@(page.GetUploadUrl() + Server.UrlPathEncode(img))')"></div>
                                        </div>
                                    }
                                }
                                <div class="card-text">
                                    @if (articleTypes?.Count() > 0)
                                    {
                                        foreach (ArticleTypesModels type in articleTypes)
                                        {
                                            <div class="article-list-type" data-type="@type.Name">
                                                <span data-color="@type.Color">@type.Name</span>
                                            </div>
                                        }
                                    }
                                    <div class="card-text-name">@item.Title</div>
                                </div>
                            </div>
                        </div>
                    </a>
                </li>
            }
        </ul>
    </div>
</div>

<script src="~/script/isotope/isotope.pkgd.js"></script>
<script src="~/script/imagesloaded/imagesloaded.js"></script>
<script type="text/javascript">
  (function($) {

    var $grid = $('#article-ul');
    var InitialFilterValue = $('#filter-bar > li.active').attr('data-filter');
    $grid.imagesLoaded(function(){
        $grid.isotope({
            itemSelector: '.item-static',
            percentPosition: true,
            layoutMode: 'fitRows',
            filter: filterList(InitialFilterValue)
        });
    });

    function filterList(value) {
        var value = $("#article-ul").find("li[data-filter-class*=" + value + "]");
        return value;
    }
    $('#filter-bar > li').on('click', function() {
        var filterValue = $( this ).attr('data-filter');
        $grid.isotope({
            filter: filterList(filterValue)
        });
    });
    $('#filter-bar > li').each( function() {
        var $this = $(this);
        $this.on( 'click', function() {
            $('#filter-bar').find('.active').removeClass('active');
            $( this ).addClass('active');
        });
    });

  })(jQuery);
</script>